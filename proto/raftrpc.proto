syntax = "proto3";
package raftrpc;

service RaftRPC {
  rpc RequestVote (VoteRequest) returns (VoteResponse);
  rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc Put(PutRequest) returns (PutResponse);
  rpc Get(GetRequest) returns (GetResponse);
}

message GetRequest {
  string key = 1;
}

message GetResponse {
  int64 value = 1;
  bool success = 2;
  optional string leader_id = 3;
}

message PutRequest {
  string key = 1;
  int64 value = 2;
  int64 serial_number = 3;
}

message PutResponse {
  bool success = 1;
  optional string leader_id = 2;
}

message VoteRequest {
  uint64 term = 1;
  string candidate_id = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
}

message VoteResponse {
  uint64 term = 1;
  bool vote_granted = 2;
  //optional string voted_for = 3;
}

message AppendEntriesRequest {
  uint64 term = 1;
  string leader_id = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  uint64 leader_commit = 6;
}

message LogEntry {
  Command command = 1;
  uint64 term = 2;
}

message Command {
  string key = 1;
  int64 value = 2;
}

message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
  optional uint64 mismatch_index = 3;
}